const {Worker} = require('worker_threads');
const path = require('path');

const start = (registeredWorker) => {
    const worker = new Worker(registeredWorker);

    worker.on('message', (message) => {
        console.log(message);
    });
    worker.on('error', (err) => {
        console.error(`Worker error: ${err}`);
    })
    worker.on('exit', (code) => {
        if (code !== 0) console.error(`Worker stopped with exit code ${code}`);
    });
}

/**
 * @function scheduleWorker() 
 * @param {*} app - the file name of your worker. (example: worker.js)
 * @param {*} interval - the interval (in milliseconds) for the worker to run

The scheduleWorker() function allows you to register a worker to run in a schedule intervals. Good use when you have CPU-demanding
tasks.
 */

const scheduleWorker = (app, interval) => {
    const worker = path.join(__dirname, app);
    const run = () => start(worker);
    run();
    setInterval(run, interval);
}


module.exports = scheduleWorker;