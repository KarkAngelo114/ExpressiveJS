// This is the main App entry point
// Here you can register your routes and functions to call at start up (using node App or node expressiveCLI --serve)

// Express default imports
require('dotenv').config();
const express = require('express');
const cookie = require('cookie-parser');
const app = express();
const cors = require('cors');
const path = require('path');

// Express default Configs
let port = Number(process.env.PORT);
let server_host = Number(process.env.SERVERHOST);
let {onCreate} = require('./database/MySQL/createDatabase');
let sessionCreate = require('./sessions/sessions.config');
let workerRegistration = require('./applications/server-workers/registerWorker');
workerRegistration();
onCreate();

let cors_option = {
    origin: 'http://localhost:3000', // make sure to change to where you serve/host your frontend to avoid getting CORS errors
    // add more optios here
}

app.use(cookie());
app.use(cors(cors_option));
app.use(sessionCreate);
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use('/uploads', express.static(path.join(__dirname, 'uploads')));
app.use('/views',express.static('views'));


// ========= register migrations here ====

// Example:
// const { createMyTable }= require('./database/migrations/migrationFile');
// createMyTable();
// Registering your migrations here will call the migration file/s at startup to create tables


// ========= register routes here ===========

// Example:
// let UserRoutes = require('./routes/UserRoutes');
//
// app.use(UserRoutes);
// ensure that when registering routes, you use "app.use(myRoutes);"


app.listen(port, server_host, () => {
    console.log(`[/]------- Server is listening on port ${port}`)
})